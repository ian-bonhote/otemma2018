---
title: "otemma_env"
format: pdf
editor: visual
execute:
  echo: true
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
#| output: false
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(readxl)
library(stringr)
library(corrplot)
library(vegan)
library(labdsv)
```

```{r}
#| echo: false
#| output: false

# Load datasets
load(file='otemma.Rdata')

```

## Geospatial data

```{r}
#| echo: false

# Clean unwanted variables and NAs
otemma_geo <- otemma_geo %>% select(-orient_deg) # remove orientation because too many NAs
otemma_geo <- otemma_geo[complete.cases(otemma_geo),]

# Show distributions
otemma_geo %>% 
  gather() %>% 
  ggplot(aes(y = value)) +
  geom_boxplot(position = position_dodge(0.8)) +
  geom_boxplot() +
  # xlab("Variable") +
  # ylab("Value") +
  ggtitle("Geospatial variables") +
  facet_wrap(~key, scales = "free_y", ncol = 4)

# PCA
geo.pca <- rda(otemma_geo, scale=TRUE)
summary(geo.pca, scaling=1)
biplot(geo.pca, scaling=1, type='t')
screeplot(geo.pca,col="bisque", bstick=TRUE)
```

## Labo data

```{r}
#| echo: false

# Clean unwanted variables and NAs
otemma_labo <- otemma_labo[complete.cases(otemma_labo),]
otemma_labo <- otemma_labo %>% select(-nitrogen) # remove nitrogen because always 0

# Show distributions
otemma_labo %>% 
  gather() %>% 
  ggplot(aes(y = value)) +
  geom_boxplot(position = position_dodge(0.8)) +
  geom_boxplot() +
  # xlab("Variable") +
  # ylab("Value") +
  ggtitle("Laboratory variables") +
  facet_wrap(~key, scales = "free_y", ncol = 4)

# PCA
labo.pca <- rda(otemma_labo, scale=TRUE)
summary(labo.pca, scaling=1)
biplot(labo.pca, scaling=1, type='t')
screeplot(labo.pca,col="bisque", bstick=TRUE)
```

## Environmental data (geospatial and labo)

```{r}
#| echo: false

# Clean unwanted variables and NAs
env <- cbind(otemma_geo, otemma_labo)
env <- env %>% select(-nitrogen) # remove nitrogen because always 0
env <- env %>% select(-orient_deg) # remove orientation because too many NAs
env <- env[complete.cases(env),]
row_ids <- as.numeric(rownames(env))

# Select only meaningfull variables
env_vars <- c(
  'altitude',
  'x',
#  'y',
  'slope',
  'dist_main_river',
  'dist_close_river',
  'carbon',
  'hydrogen',
  'mass_block',
  'mass_coarse',
  'mass_medium',
#  'mass_fine',
  'granulo_sand'
#  'granulo_silt',
#  'granulo_clay'
)
env <- env[,env_vars]

# Correlation
env.cor <- cor(env)
col<-colorRampPalette(c("white","yellow","red","blue"))
corrplot(env.cor, method="color",col=col(100),diag=FALSE)

# PCA
env.pca <- rda(env, scale=TRUE)
summary(env.pca, scaling=1)
biplot(env.pca, scaling=1, type='t')
screeplot(env.pca,col="bisque", bstick=TRUE)

```

## Vegetation data

```{r}
#| echo: false
#| output: false

# Eliminate rows that were removed in the env dataset
veg <- otemma_species[row_ids,]

# Eliminate rows with no vegetation observed
veg <- veg[-4,]
env <- env[-4,]

# Possible transformation
veg_code.orig <-    c('r',   '+',  '1',  '2a', '2b',  '3',   '4',    '5')
veg_code.meancov <- c( 0.05,  0.5,  3,    10,   20,    37.5,  62.5,   87.5)
veg_code.numdom <-  c( 0.1,   0.5,  1,    2,    2.5,   3,     4,      5)

```

```{r}
#| echo: false
#| output: false

# Transformation to mean coverage
veg <- abundtrans(veg, veg_code.orig, veg_code.meancov)
veg[is.na(veg)] <- 0 # replace NAs by 0

# Hellinger transformation
veg.hel <- decostand(veg, 'hell')

# RDA
veg.rda <- rda(veg.hel~., env)
summary(veg.rda)

veg.rda.r2 <- RsquareAdj(veg.rda)$r.squared
veg.rda.r2adj <- RsquareAdj(veg.rda)$adj.r.squared

plot(veg.rda, display = c("sp", "lc", "cn"), scaling=2, main = "Triplot RDA veg.hel ~ env")
screeplot(veg.rda, col="bisque")

anova(veg.rda, permutations = how(nperm = 999)) # test of RDA result
anova(veg.rda, by = "axis", permutations = how(nperm = 999)) # test of all canonical axes

vif.cca(veg.rda)

```

```{r}
#| echo: false
#| output: false

# Transformation to numerical dominance
veg <- abundtrans(veg, veg_code.orig, veg_code.numdom)
veg[is.na(veg)] <- 0 # replace NAs by 0

# CCA
veg.cca <- cca(veg~., env)

veg.cca.r2 <- RsquareAdj(veg.cca)$r.squared
veg.cca.r2adj <- RsquareAdj(veg.cca)$adj.r.squared

plot(veg.cca, display = c("sp", "lc", "cn"), scaling=2, main="Triplot CCA veg ~ env")
screeplot(veg.cca, col="bisque")

anova(veg.cca, by = "axis", permutations=how(nperm = 999)) # test of all canonical axes

vif.cca(veg.cca)

```
